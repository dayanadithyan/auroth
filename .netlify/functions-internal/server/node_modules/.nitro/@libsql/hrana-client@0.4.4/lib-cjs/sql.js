"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sqlToProto = exports.Sql = void 0;
const errors_js_1 = require("./errors.js");
/** Text of an SQL statement cached on the server. */
class Sql {
    #owner;
    #state;
    /** @private */
    constructor(owner, state) {
        this.#owner = owner;
        this.#state = state;
    }
    /** @private */
    _getSqlId(owner) {
        if (this.#owner !== owner) {
            throw new Error("Attempted to use SQL text opened with other object");
        }
        else if (this.#state.closed !== undefined) {
            throw new errors_js_1.ClosedError("SQL text is closed", this.#state.closed);
        }
        return this.#state.sqlId;
    }
    /** Remove the SQL text from the server, releasing resouces. */
    close() {
        this.#owner._closeSql(this.#state, new errors_js_1.ClientError("SQL was manually closed"));
    }
    /** True if the SQL text is closed (removed from the server). */
    get closed() {
        return this.#state.closed !== undefined;
    }
}
exports.Sql = Sql;
function sqlToProto(owner, sql) {
    if (sql instanceof Sql) {
        return { sqlId: sql._getSqlId(owner) };
    }
    else {
        return { sql: "" + sql };
    }
}
exports.sqlToProto = sqlToProto;
