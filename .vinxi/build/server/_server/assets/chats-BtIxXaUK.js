import{drizzle as T}from"drizzle-orm/libsql";import{createEnv as j}from"@t3-oss/env-core";import{z as y}from"zod";import{sql as g,desc as I,eq as R}from"drizzle-orm";import{sqliteTable as U,integer as S,text as A}from"drizzle-orm/sqlite-core";import{i as _,s as w,a as x,b as N}from"./server-RlaRIBIb.js";import"node:async_hooks";import"h3";function E(e){if(Array.isArray(e))return e.flatMap(u=>E(u));if(typeof e!="string")return[];const n=[];let t=0,r,i,s,o,a;const c=()=>{for(;t<e.length&&/\s/.test(e.charAt(t));)t+=1;return t<e.length},l=()=>(i=e.charAt(t),i!=="="&&i!==";"&&i!==",");for(;t<e.length;){for(r=t,a=!1;c();)if(i=e.charAt(t),i===","){for(s=t,t+=1,c(),o=t;t<e.length&&l();)t+=1;t<e.length&&e.charAt(t)==="="?(a=!0,t=o,n.push(e.slice(r,s)),r=t):t=s+1}else t+=1;(!a||t>=e.length)&&n.push(e.slice(r,e.length))}return n}function H(e){return e instanceof Headers?new Headers(e):Array.isArray(e)?new Headers(e):typeof e=="object"?new Headers(e):new Headers}function M(...e){return e.reduce((n,t)=>{const r=H(t);for(const[i,s]of r.entries())i==="set-cookie"?E(s).forEach(a=>n.append("set-cookie",a)):n.set(i,s);return n},new Headers)}const P=[];function m(e,n){const t=n||e||{};return typeof t.method>"u"&&(t.method="GET"),{options:t,middleware:r=>m(void 0,Object.assign(t,{middleware:r})),validator:r=>m(void 0,Object.assign(t,{validator:r})),type:r=>m(void 0,Object.assign(t,{type:r})),handler:(...r)=>{const[i,s]=r;Object.assign(t,{...i,extractedFn:i,serverFn:s});const o=[...t.middleware||[],G(t)];return Object.assign(async a=>C(o,"client",{...i,...t,data:a?.data,headers:a?.headers,signal:a?.signal,context:{}}).then(c=>{if(t.response==="full")return c;if(c.error)throw c.error;return c.result}),{...i,__executeServer:async(a,c)=>{const l=a instanceof FormData?z(a):a;l.type=typeof t.type=="function"?t.type(l):t.type;const u={...i,...l,signal:c},h=()=>C(o,"server",u).then(d=>({result:d.result,error:d.error,context:d.sendContext}));if(u.type==="static"){let d;if(f?.getItem&&(d=await f.getItem(u)),d||(d=await h().then(v=>({ctx:v,error:null})).catch(v=>({ctx:void 0,error:v})),f?.setItem&&await f.setItem(u,d)),_(d),d.error)throw d.error;return d.ctx}return h()}})}}}async function C(e,n,t){const r=K([...P,...e]),i=async s=>{const o=r.shift();if(!o)return s;o.options.validator&&(n!=="client"||o.options.validateClient)&&(s.data=await q(o.options.validator,s.data));const a=n==="client"?o.options.client:o.options.server;return a?L(a,s,async c=>i(c).catch(l=>{if(x(l)||N(l))return{...c,error:l};throw l})):i(s)};return i({...t,headers:t.headers||{},sendContext:t.sendContext||{},context:t.context||{}})}let f;function $(e){const n=f;return f=typeof e=="function"?e():e,()=>{f=n}}async function B(e){const n=new TextEncoder().encode(e),t=await crypto.subtle.digest("SHA-1",n);return Array.from(new Uint8Array(t)).map(s=>s.toString(16).padStart(2,"0")).join("")}$(()=>{const e=async(r,i)=>`/__tsr/staticServerFnCache/${await B(`${r.functionId}__${i}`)}.json`,n=r=>JSON.stringify(r??"",(o,a)=>a&&typeof a=="object"&&!Array.isArray(a)?Object.keys(a).sort().reduce((c,l)=>(c[l]=a[l],c),{}):a).replace(/[/\\?%*:|"<>]/g,"-").replace(/\s+/g,"_"),t=typeof document<"u"?new Map:null;return{getItem:async r=>{if(typeof document>"u"){const i=n(r.data),s=await e(r,i),o="/Users/devinda/Projects/auroth/.output/public",{promises:a}=await import("node:fs"),l=(await import("node:path")).join(o,s),[u,h]=await a.readFile(l,"utf-8").then(d=>[w.parse(d),null]).catch(d=>[null,d]);if(h&&h.code!=="ENOENT")throw h;return u}},setItem:async(r,i)=>{const{promises:s}=await import("node:fs"),o=await import("node:path"),a=n(r.data),c=await e(r,a),u=o.join("/Users/devinda/Projects/auroth/.output/public",c);await s.mkdir(o.dirname(u),{recursive:!0}),await s.writeFile(u,w.stringify(i))},fetchItem:async r=>{const i=n(r.data),s=await e(r,i);let o=t?.get(s);return o||(o=await fetch(s,{method:"GET"}).then(a=>a.text()).then(a=>w.parse(a)),t?.set(s,o)),o}}});function z(e){const n=e.get("__TSR_CONTEXT");if(e.delete("__TSR_CONTEXT"),typeof n!="string")return{context:{},data:e};try{return{context:w.parse(n),data:e}}catch{return{data:e}}}function K(e){const n=new Set,t=[],r=i=>{i.forEach(s=>{s.options.middleware&&r(s.options.middleware),n.has(s)||(n.add(s),t.push(s))})};return r(e),t}const L=async(e,n,t)=>e({...n,next:async(r={})=>t({...n,...r,context:{...n.context,...r.context},sendContext:{...n.sendContext,...r.sendContext??{}},headers:M(n.headers,r.headers),result:r.result!==void 0?r.result:n.response==="raw"?r:n.result,error:r.error??n.error})});function q(e,n){if(e==null)return{};if("~standard"in e){const t=e["~standard"].validate(n);if(t instanceof Promise)throw new Error("Async validation not supported");if(t.issues)throw new Error(JSON.stringify(t.issues,void 0,2));return t.value}if("parse"in e)return e.parse(n);if(typeof e=="function")return e(n);throw new Error("Invalid validator type!")}function G(e){return{_types:void 0,options:{validator:e.validator,validateClient:e.validateClient,client:async({next:n,sendContext:t,...r})=>{var i;const s={...r,context:t,type:typeof r.type=="function"?r.type(r):r.type};if(r.type==="static"&&typeof document<"u"){_(f);const a=await f.fetchItem(s);if(a){if(a.error)throw a.error;return n(a.ctx)}`${s.functionId}${JSON.stringify(s.data)}`}const o=await((i=e.extractedFn)==null?void 0:i.call(e,s));return n(o)},server:async({next:n,...t})=>{var r;const i=await((r=e.serverFn)==null?void 0:r.call(e,t));return n({...t,result:i})}}}}function J(e){return e.replace(/^\/|\/$/g,"")}const F=(e,n,t)=>{_(t);const r=`/${J(n)}/${e}`;return Object.assign(t,{url:r,functionId:e})},b=j({server:{OPENAI_API_KEY:y.string().min(1),TURSO_KEY:y.string().min(1),TURSO_URL:y.string().min(1),REDIS_URL:y.string().min(1),POSTGRES_DATABASE_URL:y.string().min(1)},clientPrefix:"PUBLIC_",client:{},runtimeEnv:process.env,emptyStringAsUndefined:!0}),O=T({connection:{url:b.TURSO_URL,authToken:b.TURSO_KEY}}),p=U("chats",{id:A("id").primaryKey(),messages:A("messages",{mode:"json"}).notNull().$type(),createdAt:S("created_at",{mode:"number"}).notNull().default(g`(unixepoch())`),updatedAt:S("updated_at",{mode:"number"}).notNull().default(g`(unixepoch())`)}),Y=F("app_server-functions_chats_ts--getChat_createServerFn_handler","/_server",(e,n)=>V.__executeServer(e,n)),X=F("app_server-functions_chats_ts--getChatIds_createServerFn_handler","/_server",(e,n)=>W.__executeServer(e,n)),V=m().validator(e=>e).handler(Y,async e=>{const n=await O.select().from(p).where(R(p.id,e.data));return n.length<1?[]:n}),W=m().handler(X,async()=>await O.select({id:p.id,messages:p.messages}).from(p).orderBy(I(p.createdAt)).limit(10));export{X as getChatIds_createServerFn_handler,Y as getChat_createServerFn_handler};
